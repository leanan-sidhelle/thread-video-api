/**
 * This is free and unencumbered software released into the public domain.
 * 
 * Anyone is free to copy, modify, publish, use, compile, sell, or
 * distribute this software, either in source code form or as a compiled
 * binary, for any purpose, commercial or non-commercial, and by any
 * means.
 * 
 * In jurisdictions that recognize copyright laws, the author or authors
 * of this software dedicate any and all copyright interest in the
 * software to the public domain. We make this dedication for the benefit
 * of the public at large and to the detriment of our heirs and
 * successors. We intend this dedication to be an overt act of
 * relinquishment in perpetuity of all present and future rights to this
 * software under copyright law.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 * 
 * For more information, please refer to <https://unlicense.org>
 * 
 */
plugins {
    id "java-library"
    //TODO:do we need this ??? id "maven-publish"
    id "io.toolebox.git-versioner" version "1.6.7"
    id "com.github.spotbugs" version "5.0.13"
}

group = "com.github.leanan.sidhelle"

repositories {
    mavenCentral()
}

dependencies {
    api "ch.qos.logback:logback-classic:1.4.5"
    
    api("com.github.leanan.sidhelle:video-api") {
        version { branch = "development" }
    }
    
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.8.1"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.8.1"
}

test {
    reports {
        html.enabled = true
    }
    
    useJUnitPlatform {
    	includeTags "fast"
        excludeTags "slow"
    }
}

//configure spotbugs tasks
def spotbugsExclude = project.file("spotbugs.exclude.xml")
def spotbugsInclude = project.file("spotbugs.include.xml")
project.tasks.withType(com.github.spotbugs.snom.SpotBugsTask) {
    //HTML reports
    reports {
        html.enabled = true
    }
    
    //excludes
    if(spotbugsExclude.exists()) {
        excludeFilter = spotbugsExclude
    }
    
    //includes
    if(spotbugsInclude.exists()) {
        includeFilter = spotbugsInclude
    }
}